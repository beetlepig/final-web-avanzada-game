{"version":3,"sources":["Components/SketchP5/P5Wrapper/remount.js","Components/SketchP5/P5Wrapper/sketch.js","store/P5Store.ts","Components/SketchP5/sketch.p5.ts","Components/SketchP5/SketchGame.tsx","Containers/GameP5/GameP5.tsx","Containers/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RemountOnResize","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","resizing","isPortrait","window","innerHeight","innerWidth","resize","MobileDetect","navigator","userAgent","mobile","setState","delay","undefined","setResize","debounce","inherits","createClass","key","value","addEventListener","removeEventListener","cancel","nextProps","watchedVal","prevProps","prevState","children","Component","SketchComponent","mountedView","bind","assertThisInitialized","view","width","clientWidth","height","clientHeight","newState","ratio","_this$props","sketch","sketchProps","noCanvas","p5","_setup","setup","createCanvas","_unmount","unmount","remove","receiveProps","style","assign","minWidth","maxWidth","minHeight","maxHeight","margin","react_default","a","createElement","ref","className","PureComponent","Sketch","_PureComponent2","apply","arguments","remount_RemountOnResize","sketch_SketchComponent","store","isFired","fire","isPressed","redInvulnerability","observable","action","p","playerSpaceShip","enemySpaceShip","ellipseMode","CENTER","textAlign","CharacterSpaceship","EnemyShip","draw","background","Math","floor","map","sin","radians","frameCount","moveSpaceship","update","display","shots","forEach","bullet","Vector","dist","pos","diameter","splice","indexOf","live","destroyEnemy","then","console","log","explosionWaves","wave","diameterFixed","superiorDiameter","strokeSize","inferiorDiameter","superiorVector","sub","normalize","mult","superiorTarget","copy","add","inferiorVector","inferiorTarget","invulnerable","redInvulnerable","damaged","shot","BulletFired","keyPressed","keyCode","leftKeyPressed","rightKeyPressed","keyReleased","_p5Instance","_sketchWidth","_sketchHeight","lastPlayerPosition","motionEventHandler","event","accelerationIncludingGravity","deviceAcceleration","p5Instance","sketchWidth","sketchHeight","vel","createVector","acceleration","mass","friction","_this2","y","noStroke","stroke","strokeWeight","fill","ellipse","x","frictionVector","applyForce","checkEdges","limit","force","f","div","push","Bullet","_this3","invulnerabilityDelay","Promise","resolve","setTimeout","_pos","_pInstance","pInstance","lastEnemyPosition","fillOpacity","alive","moving","objective","random","shotWave","move","releaseExplosion","_this4","set","resolveMovePromise","_this5","mag","dir","resolveDeath","explosion","cos","i","ExplosionWave","delayBetweenExplosions","milliseconds","_this6","_initialDiameter","_strokeMultiplier","strokeMultiplier","noFill","SketchGame","observer","sketch_Sketch","GameP5","onShot","onInvulnerabilityActive","onInvulnerabilityOff","InvulnerabilityRed","onTouchStart","onTouchEnd","Components_SketchP5_SketchGame","Root","Containers_GameP5_GameP5","App","Containers_Root","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4677ef7.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport { debounce } from 'lodash';\n\nimport MobileDetect from 'mobile-detect';\n\nexport class RemountOnResize extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tresizing: true,\n\t\t\tisPortrait: window.innerHeight > window.innerWidth\n\t\t};\n\n\t\t// On certain mobile devices, the software keyboard\n\t\t// triggers a resize event. In that case, we do not\n\t\t// want to trigger the remount. Instead, we want\n\t\t// to trigger a resize only when switching between\n\t\t// portrait and landscape modes.\n\t\t// This assumes the keyboard does not take up more\n\t\t// than half of the screen, which is not always\n\t\t// true but it's a decent enough hack.\n\t\tconst isMobile = new MobileDetect(window.navigator.userAgent).mobile();\n\t\tconst resize = isMobile ? (\n\t\t\t() => {\n\t\t\t\tlet isPortrait = window.innerHeight > window.innerWidth;\n\t\t\t\tif (isPortrait !== this.state.isPortrait || !this.state.resizing) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tresizing: true,\n\t\t\t\t\t\tisPortrait\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t) : (\n\t\t\t() => {\n\t\t\t\tif (!this.state.resizing) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tresizing: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Because the resize event can fire very often when\n\t\t// dragging a window, we add a debouncer to minimise\n\t\t// pointlessly unmounting, remounting and resizing\n\t\t// of the child nodes, with 200 ms as the default\n\t\tlet delay = props.delay !== undefined ? props.delay : 200;\n\t\tthis.setResize = debounce(resize, delay);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('resize', this.setResize);\n\t\tthis.setState({ resizing: false });\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.setResize);\n\t\tthis.setResize.cancel();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.watchedVal !== nextProps.watchedVal) {\n\t\t\tthis.setState({ resizing: true });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// Yes, this triggers another update.\n\t\t// That is the whole point: to cycle between\n\t\t// unmounting and remounting upon certain\n\t\t// triggers.\n\t\tif (!prevState.resizing && this.state.resizing) {\n\t\t\tthis.setState({ resizing: false });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn this.state.resizing ? null : this.props.children;\n\t}\n}","import React, { PureComponent } from 'react';\n\nimport { RemountOnResize } from './remount';\n\nimport p5 from 'p5';\n\n// A helper component, wrapping retina logic for canvas and\n// auto-resizing the sketch to fill its parent container.\n// To determine size/layout, we just use CSS on the div containing\n// the Sketch component (we might use this with flexbox, for example).\nclass SketchComponent extends PureComponent {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.mountedView = this.mountedView.bind(this);\n\t\tthis.state = {};\n\t}\n\n\t// The way canvas interacts with CSS layouting is a bit buggy\n\t// and inconsistent across browsers. To make it dependent on\n\t// the layout of the parent container, we only render it after\n\t// mounting view, that is: after CSS layouting is done.\n\tmountedView(view) {\n\t\tif (view) {\n\t\t\t// const ratio = window.devicePixelRatio || 1;\n            const ratio = 1;\n\t\t\tconst width = (view.clientWidth * ratio) | 0;\n\t\t\tconst height = (view.clientHeight * ratio) | 0;\n\t\t\tlet newState = { view, width, height, ratio };\n\t\t\tlet { sketch, sketchProps, noCanvas } = this.props;\n\t\t\tif (sketch) {\n\t\t\t\tconst _sketch = (p5) => {\n\t\t\t\t\tsketch(width, height, sketchProps)(p5);\n\n\t\t\t\t\t// handle creation of canvas\n\t\t\t\t\tconst _setup = p5.setup ? p5.setup : () => { };\n\t\t\t\t\tp5.setup = noCanvas ? () => {\n\t\t\t\t\t\tp5.noCanvas();\n\t\t\t\t\t\t_setup();\n\t\t\t\t\t} : () => {\n\t\t\t\t\t\tp5.createCanvas(width, height);\n\t\t\t\t\t\t_setup();\n\t\t\t\t\t};\n\n\t\t\t\t\t// handle removing the sketch if the component unmounts\n\t\t\t\t\tconst _unmount = p5.unmount;\n\t\t\t\t\tp5.unmount = () => {\n\t\t\t\t\t\tif (_unmount) {\n\t\t\t\t\t\t\t_unmount();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp5.remove();\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t\tnewState.sketch = new p5(_sketch, view);\n\t\t\t}\n\t\t\tthis.setState(newState);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\t// pass relevant props to sketch\n\t\tconst { sketch } = this.state;\n\t\tif (sketch.receiveProps && nextProps.sketchProps) {\n\t\t\tsketch.receiveProps(nextProps.sketchProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.state.sketch) {\n\t\t\tthis.state.sketch.unmount();\n\t\t}\n\t}\n\n\trender() {\n\t\t// If not given a width or height prop, make these fill their parent div\n\t\t// This will implicitly set the size of the <Canvas> component, which\n\t\t// will then call the passed paint function with the right dimensions.\n\t\tconst { props } = this;\n\t\tlet style = Object.assign({}, props.style);\n\t\tlet { width, height } = props;\n\t\tswitch (typeof width) {\n\t\t\tcase 'number':\n\t\t\t\twidth = width | 0;\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = width;\n\t\t\t\tstyle.maxWidth = width;\n\t\t\t\tbreak;\n\t\t\tcase 'string':\n\t\t\t\tstyle.width = width;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\t\tstyle.width = style.width ? style.width : '100%';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tswitch (typeof height) {\n\t\t\tcase 'number':\n\t\t\t\theight = height | 0;\n\t\t\t\tstyle.height = height;\n\t\t\t\tstyle.minHeight = height;\n\t\t\t\tstyle.maxHeight = height;\n\t\t\t\tbreak;\n\t\t\tcase 'string':\n\t\t\t\tstyle.height = height;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\t\tstyle.height = style.height ? style.height : '100%';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n        style.margin = '0';\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={this.mountedView}\n\t\t\t\tstyle={style}\n\t\t\t\tclassName={props.className}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\nexport class Sketch extends PureComponent {\n\trender() {\n\t\tconst { props } = this;\n\t\treturn (\n\t\t\t<RemountOnResize\n\t\t\t\t/* Since canvas interferes with CSS layouting,\n\t\t\t\twe unmount and remount it on resize events */\n\t\t\t\twatchedVal={props.watchedVal}\n\t\t\t>\n\t\t\t\t<SketchComponent\n\t\t\t\t\tsketch={props.sketch}\n\t\t\t\t\tsketchProps={props.sketchProps}\n\t\t\t\t\tnoCanvas={props.noCanvas}\n\t\t\t\t\twidth={props.width}\n\t\t\t\t\theight={props.height}\n\t\t\t\t\tstyle={props.style}\n\t\t\t\t\tclassName={props.className}\n\t\t\t\t/>\n\t\t\t</RemountOnResize>\n\t\t);\n\t}\n}","import {action, observable} from \"mobx\";\nimport { Vector } from \"p5\";\n\nclass P5Store {\n    @observable fire: boolean  = false;\n    @observable redInvulnerability: boolean = false;\n\n    @action BulletFired(isFired: boolean) {\n        this.fire = isFired;\n    }\n\n    @action InvulnerabilityRed(isPressed: boolean) {\n        this.redInvulnerability = isPressed;\n    }\n\n}\n\n\nexport const store = new P5Store();","import p5, {Vector} from \"p5\";\nimport {store} from \"../../store/P5Store\";\n\ninterface customP5Functions extends p5 {\n    receiveProps: (nextProps: SketchProps) => void;\n    unmount: () => void;\n}\n\ninterface SketchProps {\n    fire: boolean;\n    redInvulnerability: boolean;\n}\n\nexport const sketch = (width: number, height: number, props: SketchProps) => {\n    return function (p: customP5Functions) {\n        let fire: boolean =  props.fire;\n        let redInvulnerability: boolean = props.redInvulnerability;\n        let playerSpaceShip: CharacterSpaceship | null;\n        let enemySpaceShip: EnemyShip | null;\n        p.setup = () => {\n            // p.frameRate(60);\n            p.ellipseMode(p.CENTER);\n            p.textAlign(p.CENTER);\n            // p.noSmooth();\n            playerSpaceShip = new CharacterSpaceship(p, width, height);\n            enemySpaceShip = new EnemyShip(p, width, height);\n        };\n\n        p.draw = () => {\n            p.background(33,33,33, Math.floor(p.map(p.sin(p.radians(p.frameCount)), -1, 1, 40,  70)));\n            // p.clear();\n            if (playerSpaceShip) {\n                playerSpaceShip.moveSpaceship();\n                playerSpaceShip.update();\n                playerSpaceShip.display();\n            }\n\n            if(enemySpaceShip) {\n                enemySpaceShip.update();\n                enemySpaceShip.display();\n            }\n\n            checkBulletsCollision();\n            checkExplosionCollision();\n        };\n        \n        function checkBulletsCollision() {\n            if (playerSpaceShip) {\n                playerSpaceShip.shots.forEach((bullet: Bullet) => {\n                    if (enemySpaceShip && Vector.dist(bullet.pos, enemySpaceShip.pos) < (enemySpaceShip.diameter * 0.95) / 2 && playerSpaceShip) {\n                        playerSpaceShip.shots.splice(playerSpaceShip.shots.indexOf(bullet), 1);\n                        enemySpaceShip.live--;\n                        if (enemySpaceShip.live === 0) {\n                            enemySpaceShip.destroyEnemy().then(() => {\n                                console.log('mulio');\n                                enemySpaceShip = null;\n                            });\n                        }\n                    }\n                })\n            }\n        }\n\n\n        function checkExplosionCollision() {\n\n            if (enemySpaceShip) {\n\n                enemySpaceShip.explosionWaves.forEach((wave: ExplosionWave) => {\n\n                    if (playerSpaceShip) {\n\n                        const diameterFixed = ((wave.diameter * 0.97) / 2);\n                        const superiorDiameter = diameterFixed + (wave.strokeSize / 2);\n                        const inferiorDiameter = diameterFixed - (wave.strokeSize / 2);\n\n                        // SUPERIOR EXPLOSION CIRCUMFERENCE\n                        const superiorVector = Vector.sub(playerSpaceShip.pos, wave.pos);\n                        superiorVector.normalize();\n                        superiorVector.mult(superiorDiameter);\n\n                        const superiorTarget: Vector = wave.pos.copy();\n                        superiorTarget.add(superiorVector);\n                        // p.stroke(0, 200, 0);\n                        // p.line(wave.pos.x, wave.pos.y, superiorTarget.x, superiorTarget.y);\n\n\n                        // INFERIOR EXPLOSION CIRCUMFERENCE\n                        const inferiorVector = Vector.sub(playerSpaceShip.pos, wave.pos);\n                        inferiorVector.normalize();\n                        inferiorVector.mult(inferiorDiameter);\n\n                        const inferiorTarget: Vector = wave.pos.copy();\n                        inferiorTarget.add(inferiorVector);\n                        // p.stroke(0, 0, 200);\n                        // p.line(wave.pos.x, wave.pos.y, inferiorTarget.x, inferiorTarget.y);\n\n                        if ((Vector.dist(wave.pos, playerSpaceShip.pos) > Vector.dist(wave.pos, inferiorTarget)) && (Vector.dist(wave.pos, playerSpaceShip.pos) < Vector.dist(wave.pos, superiorTarget))) {\n                            //  console.log('dañooooo: ' + wave.strokeSize);\n                            if (!playerSpaceShip.invulnerable && !playerSpaceShip.redInvulnerable) {\n                                playerSpaceShip.damaged();\n                                if (playerSpaceShip.live === 0) {\n                                    console.log('mulioPLayel');\n                                    playerSpaceShip = null;\n                                }\n                            }\n                        }\n                    }\n\n                });\n\n\n            }\n\n        }\n\n        p.receiveProps = (nextProps: SketchProps) => {\n            fire = nextProps.fire;\n            redInvulnerability = nextProps.redInvulnerability;\n\n            if  (playerSpaceShip) {\n                playerSpaceShip.redInvulnerable = redInvulnerability;\n                if (fire) {\n                    if (!playerSpaceShip.redInvulnerable && !playerSpaceShip.invulnerable) {\n                        playerSpaceShip.shot();\n                    }\n                    fire = false;\n                    store.BulletFired(fire);\n                }\n            }\n\n        };\n\n\n        p.keyPressed = () => {\n            if (playerSpaceShip && !playerSpaceShip.redInvulnerable && !playerSpaceShip.invulnerable && p.keyCode === 38) {\n                playerSpaceShip.shot();\n            } else if (playerSpaceShip && p.keyCode === 37) {\n                playerSpaceShip.redInvulnerable = true;\n            } else if (playerSpaceShip && p.key === 'a') {\n                playerSpaceShip.leftKeyPressed = true;\n            } else if (playerSpaceShip && p.key === 'd') {\n                playerSpaceShip.rightKeyPressed = true;\n            }\n        };\n\n        p.keyReleased = () => {\n          if (playerSpaceShip && p.keyCode === 37)  {\n              playerSpaceShip.redInvulnerable = false;\n          } else if (playerSpaceShip && p.key === 'a') {\n              playerSpaceShip.leftKeyPressed = false;\n          } else if (playerSpaceShip && p.key === 'd') {\n              playerSpaceShip.rightKeyPressed = false;\n          }\n        };\n\n        p.unmount = () => {\n            console.log('The sketch was unmounted. Width was ' + width + ', height was ' + height);\n            if (playerSpaceShip) {\n                playerSpaceShip.unmount();\n            }\n        }\n    }\n};\n\nclass CharacterSpaceship {\n    readonly pos: Vector;\n    private readonly vel: Vector;\n    private readonly acceleration: Vector;\n    private deviceAcceleration: DeviceAcceleration | undefined;\n    private readonly p5Instance: p5;\n    private friction: number;\n    private readonly sketchWidth: number;\n    private readonly sketchHeight: number;\n    mass: number;\n    diameter: number;\n    live: number;\n    invulnerable: boolean;\n    redInvulnerable: boolean;\n    leftKeyPressed: boolean;\n    rightKeyPressed: boolean;\n\n    isPortrait: boolean;\n\n    shots: Bullet[];\n\n    constructor(_p5Instance: p5, _sketchWidth: number, _sketchHeight: number, lastPlayerPosition?: Vector) {\n        this.p5Instance = _p5Instance;\n        this.sketchWidth = _sketchWidth;\n        this.sketchHeight = _sketchHeight;\n        this.isPortrait  = window.innerHeight > window.innerWidth;\n        this.vel = this.p5Instance.createVector(0, 0);\n        this.acceleration = this.p5Instance.createVector(0 , 0);\n        this.mass = 6;\n        this.friction = this.mass * 0.01;\n        lastPlayerPosition? this.pos = lastPlayerPosition : this.pos = this.p5Instance.createVector(this.sketchWidth * 0.5, this.sketchHeight * 0.85);\n        this.diameter = this.mass * (this.sketchWidth * 0.01);\n        this.live = 5;\n        this.invulnerable = false;\n        this.redInvulnerable = false;\n        this.leftKeyPressed = false;\n        this.rightKeyPressed = false;\n\n        window.addEventListener('devicemotion', this.motionEventHandler, true);\n\n        this.shots = [];\n    }\n\n    update() {\n        this.vel.add(this.acceleration);\n        this.pos.add(this.vel);\n        this.acceleration.mult(0);\n\n        this.shots.forEach( (bullet: Bullet) => {\n            bullet.update();\n            bullet.display();\n\n            if (bullet.pos.y < - 100) {\n                this.shots.splice( this.shots.indexOf(bullet), 1 );\n            }\n        });\n    }\n\n    display() {\n        this.p5Instance.noStroke();\n        if (this.redInvulnerable) {\n            this.p5Instance.stroke(255, 50, 50);\n            this.p5Instance.strokeWeight(this.diameter * 0.1);\n            this.p5Instance.fill(230, 155);\n        } else if (this.invulnerable)  {\n            this.p5Instance.stroke(255);\n            this.p5Instance.strokeWeight(this.diameter * 0.1);\n            this.p5Instance.fill(230, 50);\n        } else {\n            this.p5Instance.fill(230, 255);\n        }\n        this.p5Instance.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter);\n    }\n\n    moveSpaceship() {\n        const frictionVector: Vector = this.vel.copy();\n        frictionVector.mult(-1);\n        frictionVector.normalize();\n        frictionVector.mult(this.friction);\n\n        this.applyForce(frictionVector);\n\n        // Apply accelerometer x force\n        if (this.deviceAcceleration && this.deviceAcceleration.y && this.deviceAcceleration.x) {\n            let acceleration: number;\n            if (this.isPortrait) {\n                acceleration = this.p5Instance.map(this.deviceAcceleration.x, -3, 3, 1, -1);\n            } else {\n                acceleration = this.p5Instance.map(this.deviceAcceleration.y, -3, 3, -1, 1);\n            }\n            if (acceleration > 0 && this.pos.x < this.sketchWidth * 0.9) {\n                this.applyForce(this.p5Instance.createVector(acceleration, 0, 0));\n            } else if (acceleration < 0 && this.pos.x > this.sketchWidth * 0.1) {\n                this.applyForce(this.p5Instance.createVector(acceleration, 0, 0));\n            }\n        }\n\n        if (this.leftKeyPressed && this.pos.x > this.sketchWidth * 0.1) {\n            this.applyForce(this.p5Instance.createVector(-3, 0, 0));\n        }\n        if (this.rightKeyPressed && this.pos.x < this.sketchWidth * 0.9) {\n            this.applyForce(this.p5Instance.createVector(+3, 0, 0));\n        }\n\n\n        this.checkEdges();\n       // this.pos.set(this.pos.x, this.sketchHeight * 0.8);\n        this.vel.limit(10);\n    }\n    checkEdges() {\n        if (this.pos.x > this.sketchWidth * 0.9) {\n            if (this.vel.x > 0) {\n                this.friction = 2;\n            } else {\n                this.friction = 0.5;\n                this.applyForce(this.p5Instance.createVector(-4));\n            }\n        } else if (this.pos.x < this.sketchWidth * 0.1) {\n            if (this.vel.x < 0) {\n                this.friction = 2;\n            } else {\n                this.friction = 0.5;\n                this.applyForce(this.p5Instance.createVector(+4));\n            }\n        } else {\n            this.friction = 0.5;\n        }\n    }\n\n    applyForce(force: Vector) {\n        const f: Vector = Vector.div(force , this.mass);\n        this.acceleration.add(f);\n    }\n\n    motionEventHandler = (event: DeviceMotionEvent) => {\n\n        const { accelerationIncludingGravity } = event;\n\n        if(accelerationIncludingGravity) {\n            this.deviceAcceleration = accelerationIncludingGravity;\n\n        }\n    };\n\n    shot() {\n        this.shots.push(new Bullet(this.pos.copy(), this.p5Instance))\n    }\n\n    damaged() {\n        this.live--;\n        this.invulnerable = true;\n        this.invulnerabilityDelay().then(() => {\n            this.invulnerable = false;\n        });\n    }\n\n    invulnerabilityDelay(): Promise<void> {\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n                resolve();\n            }, 1000);\n        });\n    }\n\n\n\n    unmount() {\n        window.removeEventListener('devicemotion', this.motionEventHandler, true);\n    }\n}\n\nclass Bullet {\n    readonly pos: Vector;\n    private readonly vel: Vector;\n    private readonly acceleration: Vector;\n    private readonly mass: number;\n    private readonly pInstance: p5;\n\n    constructor(_pos: Vector, _pInstance: p5) {\n        this.pInstance = _pInstance;\n        this.pos = _pos;\n        this.vel = this.pInstance.createVector(0, 0);\n        this.acceleration = this.pInstance.createVector(0 , 0);\n        this.mass = 1;\n\n        this.applyForce(this.pInstance.createVector(0, -10));\n    }\n\n    update() {\n        this.vel.add(this.acceleration);\n        this.pos.add(this.vel);\n        this.acceleration.mult(0);\n    }\n\n    display() {\n        this.pInstance.fill(200);\n        this.pInstance.noStroke();\n        this.pInstance.ellipse(this.pos.x, this.pos.y, 10, 10);\n    }\n\n\n    applyForce(force: Vector) {\n        const f: Vector = Vector.div(force , this.mass);\n        this.acceleration.add(f);\n    }\n}\n\nclass EnemyShip {\n    readonly pos: Vector;\n    private readonly vel: Vector;\n    private readonly acceleration: Vector;\n    private readonly p5Instance: p5;\n    private friction: number;\n    private readonly sketchWidth: number;\n    private readonly sketchHeight: number;\n    private fillOpacity: number;\n    mass: number;\n    diameter: number;\n\n    live: number;\n\n    explosionWaves: ExplosionWave[];\n    private alive: boolean;\n    private moving: boolean;\n    private resolveMovePromise: (() => void) | undefined;\n    private resolveDeath: (() => void) | undefined;\n    private readonly objective: Vector;\n\n    constructor(_p5Instance: p5, _sketchWidth: number, _sketchHeight: number, lastEnemyPosition?: Vector) {\n        this.p5Instance = _p5Instance;\n        this.sketchWidth = _sketchWidth;\n        this.sketchHeight = _sketchHeight;\n        this.vel = this.p5Instance.createVector(0, 0);\n        this.acceleration = this.p5Instance.createVector(0 , 0);\n        this.mass = 10;\n        this.friction = this.mass * 0.01;\n        lastEnemyPosition? this.pos = lastEnemyPosition : this.pos = this.p5Instance.createVector(0, 0);\n        this.diameter = this.mass * (this.sketchWidth * 0.01);\n        this.live = 50;\n        this.fillOpacity = 230;\n\n        this.explosionWaves = [];\n        this.alive = true;\n        this.moving = true;\n\n        this.objective = this.p5Instance.createVector(this.p5Instance.random(0, this.sketchWidth), this.p5Instance.random(0, this.sketchHeight));\n\n        this.shotWave();\n\n    }\n\n    async shotWave(): Promise<void> {\n        while (this.alive) {\n            if (this.alive) {\n                await this.move();\n            }\n            if (this.alive) {\n                await this.releaseExplosion();\n            }\n        }\n    }\n\n    move(): Promise<void> {\n        this.objective.set(this.p5Instance.random(this.sketchWidth * 0.1, this.sketchWidth * 0.8), this.p5Instance.random(this.sketchHeight * 0.1, this.sketchHeight * 0.6));\n        this.moving = true;\n        return new Promise<void>(resolve => {\n            this.resolveMovePromise = resolve;\n        });\n    }\n\n    applyForce(force: Vector) {\n        const f: Vector = Vector.div(force , this.mass);\n        this.acceleration.add(f);\n    }\n\n    update() {\n\n        if (this.moving) {\n            if (Vector.dist(this.objective, this.pos) < this.diameter * 0.6) {\n                this.friction = 0.8 * this.vel.mag();\n                if (this.vel.mag() < 0.8) {\n                    this.vel.mult(0);\n                    this.acceleration.mult(0);\n                    this.friction = this.mass * 0.01;\n                    this.moving = false;\n                    if (this.resolveMovePromise) {\n                        this.resolveMovePromise();\n                    }\n                }\n            } else {\n                const dir = Vector.sub(this.objective, this.pos);\n                dir.normalize();\n                dir.mult(2);\n                this.applyForce(dir);\n            }\n        }\n\n        if (!this.alive) {\n            this.fillOpacity--;\n            if (this.fillOpacity <= 0 && this.resolveDeath){\n                this.resolveDeath();\n            }\n        }\n\n\n\n        const frictionVector: Vector = this.vel.copy();\n        frictionVector.mult(-1);\n        frictionVector.normalize();\n        frictionVector.mult(this.friction);\n        this.applyForce(frictionVector);\n\n        this.vel.add(this.acceleration);\n        this.pos.add(this.vel);\n        this.acceleration.mult(0);\n\n\n        this.explosionWaves.forEach((explosion: ExplosionWave) => {\n            explosion.display();\n            if (explosion.diameter > 10000) {\n                this.explosionWaves.splice(this.explosionWaves.indexOf(explosion), 1);\n            }\n        });\n\n        this.vel.limit(20);\n    }\n\n    display() {\n        this.p5Instance.stroke(244,67,54, this.fillOpacity);\n        this.p5Instance.strokeWeight(this.p5Instance.map(this.p5Instance.cos(this.p5Instance.radians(this.p5Instance.frameCount * 3)), -1, 1, this.diameter * 0.03,  this.diameter * 0.09));\n        this.p5Instance.fill(230, 100, 100,this.fillOpacity * 0.7);\n        this.p5Instance.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter);\n    }\n\n    async releaseExplosion(): Promise<void> {\n            for (let i = 0; i < this.p5Instance.random(2, 6); i++) {\n                if (this.alive) {\n                    this.explosionWaves.push(new ExplosionWave(this.pos.copy(), this.diameter, this.p5Instance.random(1, 4.5), this.p5Instance));\n                    if (i < 5) {\n                        await this.delayBetweenExplosions(this.p5Instance.random(500, 2000));\n                    } else {\n                        await this.delayBetweenExplosions(20);\n                    }\n                }\n            }\n    }\n\n    delayBetweenExplosions(milliseconds: number): Promise<void> {\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n                resolve();\n            }, milliseconds);\n        });\n    }\n\n    destroyEnemy(): Promise<void> {\n        this.alive = false;\n        console.log('va a molil');\n        return new Promise<void>(resolve => {\n            this.resolveDeath = resolve;\n        });\n    }\n\n\n\n}\n\nclass ExplosionWave {\n    pInstance: p5;\n    pos: Vector;\n    diameter: number;\n    strokeMultiplier: number;\n    strokeSize: number;\n\n    constructor(_pos: Vector, _initialDiameter: number, _strokeMultiplier: number, _pInstance: p5) {\n        this.pInstance = _pInstance;\n        this.pos = _pos;\n        this.diameter = _initialDiameter;\n        this.strokeMultiplier = _strokeMultiplier;\n        this.strokeSize = (this.diameter * 0.05) * this.strokeMultiplier;\n    }\n\n    display() {\n        this.pInstance.stroke(244,67,54, 100);\n        this.strokeSize = (this.diameter * 0.05) * this.strokeMultiplier;\n        this.pInstance.strokeWeight(this.strokeSize);\n        this.pInstance.noFill();\n        this.pInstance.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter);\n        this.update();\n    }\n\n    update() {\n        this.diameter += (this.diameter * 0.1) / this.strokeMultiplier;\n    }\n}\n\n","import React, {Component} from 'react';\nimport './SketchGame.css';\nimport { Sketch } from './P5Wrapper/sketch';\nimport {sketch} from \"./sketch.p5\";\nimport {observer} from \"mobx-react\";\nimport {store} from \"../../store/P5Store\";\n\ninterface Props {\n\n}\n\ninterface State {\n\n}\n\n@observer class SketchGame extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div className={'CanvasContainer'}>\n                <Sketch sketch={sketch}\n                        width={'99%'}\n                        height={'99%'}\n                        sketchProps={{fire: store.fire, redInvulnerability: store.redInvulnerability}}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SketchGame;","import React, {PureComponent} from 'react';\nimport './GameP5.css'\nimport SketchGame from \"../../Components/SketchP5/SketchGame\";\nimport {store} from \"../../store/P5Store\";\n\nclass GameP5 extends PureComponent {\n\n    constructor(props: any) {\n        super(props);\n        this.onShot = this.onShot.bind(this);\n        this.onInvulnerabilityActive =  this.onInvulnerabilityActive.bind(this);\n        this.onInvulnerabilityOff =  this.onInvulnerabilityOff.bind(this);\n    }\n\n\n    onShot() {\n        store.BulletFired(true);\n    };\n\n    onInvulnerabilityActive() {\n        store.InvulnerabilityRed(true);\n    }\n\n    onInvulnerabilityOff() {\n        store.InvulnerabilityRed(false);\n    }\n\n\n    render() {\n        return (\n            <div className={'gameContainer'}>\n                <div className={'invulnerabilityButtonContainer noResponsiveButton'}>\n                    <button className={'invulnerabilityButton'} onTouchStart={this.onInvulnerabilityActive}  onTouchEnd={this.onInvulnerabilityOff}/>\n                </div>\n                <SketchGame/>\n                <div className={'buttonsGeneralContainer responsiveButton'}>\n                    <div className={'invulnerabilityButtonContainer'}>\n                        <button className={'invulnerabilityButton'} onTouchStart={this.onInvulnerabilityActive}  onTouchEnd={this.onInvulnerabilityOff}/>\n                    </div>\n                    <div className={'fireButtonContainer'}>\n                        <button className={'fireButton'} onTouchStart={this.onShot}/>\n                    </div>\n                </div>\n\n                <div className={'fireButtonContainer noResponsiveButton'}>\n                    <button className={'fireButton'} onTouchStart={this.onShot}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default GameP5;","import React, {Component} from 'react';\nimport GameP5 from \"./GameP5/GameP5\";\n\nclass Root extends Component {\n    render() {\n        return (\n            <GameP5/>\n        );\n    }\n}\n\nexport default Root;","import React, { PureComponent } from 'react';\nimport './App.css';\nimport Root from \"./Containers/Root\";\n\nclass App extends PureComponent {\n    render() {\n        return (\n            <Root/>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}