{"version":3,"sources":["Components/SketchP5/P5Wrapper/remount.js","Components/SketchP5/P5Wrapper/sketch.js","store/P5Store.ts","Components/SketchP5/sketch.p5.ts","Components/SketchP5/SketchGame.tsx","Containers/GameP5/GameP5.tsx","Containers/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RemountOnResize","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","resizing","isPortrait","window","innerHeight","innerWidth","resize","MobileDetect","navigator","userAgent","mobile","setState","delay","undefined","setResize","debounce","inherits","createClass","key","value","addEventListener","removeEventListener","cancel","nextProps","watchedVal","prevProps","prevState","children","Component","SketchComponent","mountedView","bind","assertThisInitialized","view","width","clientWidth","height","clientHeight","newState","ratio","_this$props","sketch","sketchProps","noCanvas","p5","_setup","setup","createCanvas","_unmount","unmount","remove","receiveProps","style","assign","minWidth","maxWidth","minHeight","maxHeight","margin","react_default","a","createElement","ref","className","PureComponent","Sketch","_PureComponent2","apply","arguments","remount_RemountOnResize","sketch_SketchComponent","store","isFired","fire","isPressed","redInvulnerability","observable","action","p","playerSpaceShip","enemySpaceShip","now","delta","then","millis","ellipseMode","CENTER","textAlign","CharacterSpaceship","EnemyShip","draw","background","Math","floor","map","sin","radians","frameCount","update","display","shots","forEach","bullet","Vector","dist","pos","diameter","splice","indexOf","live","destroyEnemy","explosionWaves","wave","diameterFixed","superiorDiameter","strokeSize","inferiorDiameter","superiorVector","sub","normalize","mult","superiorTarget","copy","add","inferiorVector","inferiorTarget","invulnerable","redInvulnerable","damaged","shot","BulletFired","keyPressed","keyCode","leftKeyPressed","rightKeyPressed","keyReleased","console","log","_p5Instance","_sketchWidth","_sketchHeight","lastPlayerPosition","motionEventHandler","event","accelerationIncludingGravity","deviceAcceleration","p5Instance","sketchWidth","sketchHeight","vel","createVector","acceleration","mass","friction","deltaTime","_this2","moveSpaceship","frictionVector","applyForce","y","noStroke","stroke","strokeWeight","fill","ellipse","x","checkEdges","limit","mag","force","f","div","push","Bullet","_this3","invulnerabilityDelay","Promise","resolve","setTimeout","_pos","_pInstance","pInstance","lastEnemyPosition","fillOpacity","alive","moving","brake","objective","random","shotWave","move","releaseExplosion","_this4","set","resolveMovePromise","_this5","dir","resolveDeath","explosion","cos","i","ExplosionWave","delayBetweenExplosions","milliseconds","_this6","_initialDiameter","_strokeMultiplier","strokeMultiplier","noFill","SketchGame","observer","sketch_Sketch","GameP5","onShot","onInvulnerabilityActive","onInvulnerabilityOff","InvulnerabilityRed","onTouchStart","onTouchEnd","Components_SketchP5_SketchGame","Root","Containers_GameP5_GameP5","App","Containers_Root","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d3c9989.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nimport { debounce } from 'lodash';\r\n\r\nimport MobileDetect from 'mobile-detect';\r\n\r\nexport class RemountOnResize extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tresizing: true,\r\n\t\t\tisPortrait: window.innerHeight > window.innerWidth\r\n\t\t};\r\n\r\n\t\t// On certain mobile devices, the software keyboard\r\n\t\t// triggers a resize event. In that case, we do not\r\n\t\t// want to trigger the remount. Instead, we want\r\n\t\t// to trigger a resize only when switching between\r\n\t\t// portrait and landscape modes.\r\n\t\t// This assumes the keyboard does not take up more\r\n\t\t// than half of the screen, which is not always\r\n\t\t// true but it's a decent enough hack.\r\n\t\tconst isMobile = new MobileDetect(window.navigator.userAgent).mobile();\r\n\t\tconst resize = isMobile ? (\r\n\t\t\t() => {\r\n\t\t\t\tlet isPortrait = window.innerHeight > window.innerWidth;\r\n\t\t\t\tif (isPortrait !== this.state.isPortrait || !this.state.resizing) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tresizing: true,\r\n\t\t\t\t\t\tisPortrait\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t) : (\r\n\t\t\t() => {\r\n\t\t\t\tif (!this.state.resizing) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tresizing: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Because the resize event can fire very often when\r\n\t\t// dragging a window, we add a debouncer to minimise\r\n\t\t// pointlessly unmounting, remounting and resizing\r\n\t\t// of the child nodes, with 200 ms as the default\r\n\t\tlet delay = props.delay !== undefined ? props.delay : 200;\r\n\t\tthis.setResize = debounce(resize, delay);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener('resize', this.setResize);\r\n\t\tthis.setState({ resizing: false });\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('resize', this.setResize);\r\n\t\tthis.setResize.cancel();\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (this.props.watchedVal !== nextProps.watchedVal) {\r\n\t\t\tthis.setState({ resizing: true });\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t// Yes, this triggers another update.\r\n\t\t// That is the whole point: to cycle between\r\n\t\t// unmounting and remounting upon certain\r\n\t\t// triggers.\r\n\t\tif (!prevState.resizing && this.state.resizing) {\r\n\t\t\tthis.setState({ resizing: false });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.state.resizing ? null : this.props.children;\r\n\t}\r\n}","import React, { PureComponent } from 'react';\r\n\r\nimport { RemountOnResize } from './remount';\r\n\r\nimport p5 from 'p5';\r\n\r\n// A helper component, wrapping retina logic for canvas and\r\n// auto-resizing the sketch to fill its parent container.\r\n// To determine size/layout, we just use CSS on the div containing\r\n// the Sketch component (we might use this with flexbox, for example).\r\nclass SketchComponent extends PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.mountedView = this.mountedView.bind(this);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\t// The way canvas interacts with CSS layouting is a bit buggy\r\n\t// and inconsistent across browsers. To make it dependent on\r\n\t// the layout of the parent container, we only render it after\r\n\t// mounting view, that is: after CSS layouting is done.\r\n\tmountedView(view) {\r\n\t\tif (view) {\r\n\t\t\t// const ratio = window.devicePixelRatio || 1;\r\n            const ratio = 1;\r\n\t\t\tconst width = (view.clientWidth * ratio) | 0;\r\n\t\t\tconst height = (view.clientHeight * ratio) | 0;\r\n\t\t\tlet newState = { view, width, height, ratio };\r\n\t\t\tlet { sketch, sketchProps, noCanvas } = this.props;\r\n\t\t\tif (sketch) {\r\n\t\t\t\tconst _sketch = (p5) => {\r\n\t\t\t\t\tsketch(width, height, sketchProps)(p5);\r\n\r\n\t\t\t\t\t// handle creation of canvas\r\n\t\t\t\t\tconst _setup = p5.setup ? p5.setup : () => { };\r\n\t\t\t\t\tp5.setup = noCanvas ? () => {\r\n\t\t\t\t\t\tp5.noCanvas();\r\n\t\t\t\t\t\t_setup();\r\n\t\t\t\t\t} : () => {\r\n\t\t\t\t\t\tp5.createCanvas(width, height);\r\n\t\t\t\t\t\t_setup();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// handle removing the sketch if the component unmounts\r\n\t\t\t\t\tconst _unmount = p5.unmount;\r\n\t\t\t\t\tp5.unmount = () => {\r\n\t\t\t\t\t\tif (_unmount) {\r\n\t\t\t\t\t\t\t_unmount();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp5.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\t\t\t\tnewState.sketch = new p5(_sketch, view);\r\n\t\t\t}\r\n\t\t\tthis.setState(newState);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\t// pass relevant props to sketch\r\n\t\tconst { sketch } = this.state;\r\n\t\tif (sketch.receiveProps && nextProps.sketchProps) {\r\n\t\t\tsketch.receiveProps(nextProps.sketchProps);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.state.sketch) {\r\n\t\t\tthis.state.sketch.unmount();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t// If not given a width or height prop, make these fill their parent div\r\n\t\t// This will implicitly set the size of the <Canvas> component, which\r\n\t\t// will then call the passed paint function with the right dimensions.\r\n\t\tconst { props } = this;\r\n\t\tlet style = Object.assign({}, props.style);\r\n\t\tlet { width, height } = props;\r\n\t\tswitch (typeof width) {\r\n\t\t\tcase 'number':\r\n\t\t\t\twidth = width | 0;\r\n\t\t\t\tstyle.width = width;\r\n\t\t\t\tstyle.minWidth = width;\r\n\t\t\t\tstyle.maxWidth = width;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'string':\r\n\t\t\t\tstyle.width = width;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'undefined':\r\n\t\t\t\tstyle.width = style.width ? style.width : '100%';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tswitch (typeof height) {\r\n\t\t\tcase 'number':\r\n\t\t\t\theight = height | 0;\r\n\t\t\t\tstyle.height = height;\r\n\t\t\t\tstyle.minHeight = height;\r\n\t\t\t\tstyle.maxHeight = height;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'string':\r\n\t\t\t\tstyle.height = height;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'undefined':\r\n\t\t\t\tstyle.height = style.height ? style.height : '100%';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n        style.margin = '0';\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.mountedView}\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tclassName={props.className}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport class Sketch extends PureComponent {\r\n\trender() {\r\n\t\tconst { props } = this;\r\n\t\treturn (\r\n\t\t\t<RemountOnResize\r\n\t\t\t\t/* Since canvas interferes with CSS layouting,\r\n\t\t\t\twe unmount and remount it on resize events */\r\n\t\t\t\twatchedVal={props.watchedVal}\r\n\t\t\t>\r\n\t\t\t\t<SketchComponent\r\n\t\t\t\t\tsketch={props.sketch}\r\n\t\t\t\t\tsketchProps={props.sketchProps}\r\n\t\t\t\t\tnoCanvas={props.noCanvas}\r\n\t\t\t\t\twidth={props.width}\r\n\t\t\t\t\theight={props.height}\r\n\t\t\t\t\tstyle={props.style}\r\n\t\t\t\t\tclassName={props.className}\r\n\t\t\t\t/>\r\n\t\t\t</RemountOnResize>\r\n\t\t);\r\n\t}\r\n}","import {action, observable} from \"mobx\";\r\nimport { Vector } from \"p5\";\r\n\r\nclass P5Store {\r\n    @observable fire: boolean  = false;\r\n    @observable redInvulnerability: boolean = false;\r\n\r\n    @action BulletFired(isFired: boolean) {\r\n        this.fire = isFired;\r\n    }\r\n\r\n    @action InvulnerabilityRed(isPressed: boolean) {\r\n        this.redInvulnerability = isPressed;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const store = new P5Store();","import p5, {Vector} from \"p5\";\r\nimport {store} from \"../../store/P5Store\";\r\n\r\ninterface customP5Functions extends p5 {\r\n    receiveProps: (nextProps: SketchProps) => void;\r\n    unmount: () => void;\r\n}\r\n\r\ninterface SketchProps {\r\n    fire: boolean;\r\n    redInvulnerability: boolean;\r\n}\r\n\r\nexport const sketch = (width: number, height: number, props: SketchProps) => {\r\n    return function (p: customP5Functions) {\r\n        let fire: boolean =  props.fire;\r\n        let redInvulnerability: boolean = props.redInvulnerability;\r\n        let playerSpaceShip: CharacterSpaceship | null;\r\n        let enemySpaceShip: EnemyShip | null;\r\n        let now,delta,then = p.millis();\r\n        let interval = 1000 / 60;\r\n        p.setup = () => {\r\n            p.ellipseMode(p.CENTER);\r\n            p.textAlign(p.CENTER);\r\n            playerSpaceShip = new CharacterSpaceship(p, width, height);\r\n            enemySpaceShip = new EnemyShip(p, width, height);\r\n        };\r\n\r\n        p.draw = () => {\r\n\r\n            now = p.millis();\r\n            delta = now - then;\r\n            if (delta > interval) {\r\n                p.background(33, 33, 33, Math.floor(p.map(p.sin(p.radians(p.frameCount)), -1, 1, 40, 70)));\r\n                if (playerSpaceShip) {\r\n                    playerSpaceShip.update(delta / 1000);\r\n                    playerSpaceShip.display();\r\n                }\r\n\r\n                if (enemySpaceShip) {\r\n                    enemySpaceShip.update();\r\n                    enemySpaceShip.display();\r\n                }\r\n\r\n                checkBulletsCollision();\r\n                checkExplosionCollision();\r\n\r\n                then = now - (delta % interval);\r\n            }\r\n\r\n            /*    //  WITH FRAMERATE LIMIT\r\n            p.background(33,33,33, Math.floor(p.map(p.sin(p.radians(p.frameCount)), -1, 1, 40,  70)));\r\n            if (playerSpaceShip) {\r\n                playerSpaceShip.display();\r\n            }\r\n\r\n            if(enemySpaceShip) {\r\n                enemySpaceShip.display();\r\n            }\r\n\r\n\r\n            now = Date.now();\r\n            delta = now - then;\r\n            if (delta > interval) {\r\n                if (playerSpaceShip) {\r\n                    playerSpaceShip.update(delta / 1000);\r\n                }\r\n\r\n                if(enemySpaceShip) {\r\n                    enemySpaceShip.update();\r\n                }\r\n                then = now - (delta % interval);\r\n            }\r\n\r\n            checkBulletsCollision();\r\n            checkExplosionCollision();\r\n            */\r\n\r\n        };\r\n        \r\n        function checkBulletsCollision() {\r\n            if (playerSpaceShip) {\r\n                playerSpaceShip.shots.forEach((bullet: Bullet) => {\r\n                    if (enemySpaceShip && Vector.dist(bullet.pos, enemySpaceShip.pos) < (enemySpaceShip.diameter * 0.95) / 2 && playerSpaceShip) {\r\n                        playerSpaceShip.shots.splice(playerSpaceShip.shots.indexOf(bullet), 1);\r\n                        enemySpaceShip.live--;\r\n                        if (enemySpaceShip.live === 0) {\r\n                            enemySpaceShip.destroyEnemy().then(() => {\r\n                                enemySpaceShip = null;\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n        function checkExplosionCollision() {\r\n\r\n            if (enemySpaceShip) {\r\n\r\n                enemySpaceShip.explosionWaves.forEach((wave: ExplosionWave) => {\r\n\r\n                    if (playerSpaceShip) {\r\n\r\n                        const diameterFixed = ((wave.diameter * 0.97) / 2);\r\n                        const superiorDiameter = diameterFixed + (wave.strokeSize / 2);\r\n                        const inferiorDiameter = diameterFixed - (wave.strokeSize / 2);\r\n\r\n                        // SUPERIOR EXPLOSION CIRCUMFERENCE\r\n                        const superiorVector = Vector.sub(playerSpaceShip.pos, wave.pos);\r\n                        superiorVector.normalize();\r\n                        superiorVector.mult(superiorDiameter);\r\n\r\n                        const superiorTarget: Vector = wave.pos.copy();\r\n                        superiorTarget.add(superiorVector);\r\n                        // p.stroke(0, 200, 0);\r\n                        // p.line(wave.pos.x, wave.pos.y, superiorTarget.x, superiorTarget.y);\r\n\r\n\r\n                        // INFERIOR EXPLOSION CIRCUMFERENCE\r\n                        const inferiorVector = Vector.sub(playerSpaceShip.pos, wave.pos);\r\n                        inferiorVector.normalize();\r\n                        inferiorVector.mult(inferiorDiameter);\r\n\r\n                        const inferiorTarget: Vector = wave.pos.copy();\r\n                        inferiorTarget.add(inferiorVector);\r\n                        // p.stroke(0, 0, 200);\r\n                        // p.line(wave.pos.x, wave.pos.y, inferiorTarget.x, inferiorTarget.y);\r\n\r\n                        if ((Vector.dist(wave.pos, playerSpaceShip.pos) > Vector.dist(wave.pos, inferiorTarget)) && (Vector.dist(wave.pos, playerSpaceShip.pos) < Vector.dist(wave.pos, superiorTarget))) {\r\n                            if (!playerSpaceShip.invulnerable && !playerSpaceShip.redInvulnerable) {\r\n                                playerSpaceShip.damaged();\r\n                                if (playerSpaceShip.live === 0) {\r\n                                    playerSpaceShip = null;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p.receiveProps = (nextProps: SketchProps) => {\r\n            fire = nextProps.fire;\r\n            redInvulnerability = nextProps.redInvulnerability;\r\n\r\n            if  (playerSpaceShip) {\r\n                playerSpaceShip.redInvulnerable = redInvulnerability;\r\n                if (fire) {\r\n                    if (!playerSpaceShip.redInvulnerable && !playerSpaceShip.invulnerable) {\r\n                        playerSpaceShip.shot();\r\n                    }\r\n                    fire = false;\r\n                    store.BulletFired(fire);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n\r\n        p.keyPressed = () => {\r\n            if (playerSpaceShip && !playerSpaceShip.redInvulnerable && !playerSpaceShip.invulnerable && p.keyCode === 38) {\r\n                playerSpaceShip.shot();\r\n            } else if (playerSpaceShip && p.keyCode === 37) {\r\n                playerSpaceShip.redInvulnerable = true;\r\n            } else if (playerSpaceShip && p.key === 'a') {\r\n                playerSpaceShip.leftKeyPressed = true;\r\n            } else if (playerSpaceShip && p.key === 'd') {\r\n                playerSpaceShip.rightKeyPressed = true;\r\n            }\r\n        };\r\n\r\n        p.keyReleased = () => {\r\n          if (playerSpaceShip && p.keyCode === 37)  {\r\n              playerSpaceShip.redInvulnerable = false;\r\n          } else if (playerSpaceShip && p.key === 'a') {\r\n              playerSpaceShip.leftKeyPressed = false;\r\n          } else if (playerSpaceShip && p.key === 'd') {\r\n              playerSpaceShip.rightKeyPressed = false;\r\n          }\r\n        };\r\n\r\n        p.unmount = () => {\r\n            console.log('The sketch was unmounted. Width was ' + width + ', height was ' + height);\r\n            if (playerSpaceShip) {\r\n                playerSpaceShip.unmount();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nclass CharacterSpaceship {\r\n    readonly pos: Vector;\r\n    private readonly vel: Vector;\r\n    private readonly acceleration: Vector;\r\n    private deviceAcceleration: DeviceAcceleration | undefined;\r\n    private readonly p5Instance: p5;\r\n    private friction: number;\r\n    private readonly sketchWidth: number;\r\n    private readonly sketchHeight: number;\r\n    mass: number;\r\n    diameter: number;\r\n    live: number;\r\n    invulnerable: boolean;\r\n    redInvulnerable: boolean;\r\n    leftKeyPressed: boolean;\r\n    rightKeyPressed: boolean;\r\n\r\n    isPortrait: boolean;\r\n\r\n    shots: Bullet[];\r\n\r\n    constructor(_p5Instance: p5, _sketchWidth: number, _sketchHeight: number, lastPlayerPosition?: Vector) {\r\n        this.p5Instance = _p5Instance;\r\n        this.sketchWidth = _sketchWidth;\r\n        this.sketchHeight = _sketchHeight;\r\n        this.isPortrait  = window.innerHeight > window.innerWidth;\r\n        this.vel = this.p5Instance.createVector(0, 0);\r\n        this.acceleration = this.p5Instance.createVector(0 , 0);\r\n        this.mass = 6;\r\n        this.friction = this.mass * 6;\r\n        lastPlayerPosition? this.pos = lastPlayerPosition : this.pos = this.p5Instance.createVector(this.sketchWidth * 0.5, this.sketchHeight * 0.85);\r\n        this.diameter = this.mass * (this.sketchWidth * 0.01);\r\n        this.live = 5;\r\n        this.invulnerable = false;\r\n        this.redInvulnerable = false;\r\n        this.leftKeyPressed = false;\r\n        this.rightKeyPressed = false;\r\n\r\n        window.addEventListener('devicemotion', this.motionEventHandler, true);\r\n\r\n        this.shots = [];\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.moveSpaceship();\r\n\r\n        const frictionVector: Vector = this.vel.copy();\r\n        frictionVector.mult(-1);\r\n        frictionVector.normalize();\r\n        frictionVector.mult(this.friction);\r\n        this.applyForce(frictionVector);\r\n\r\n        this.vel.add(this.acceleration);\r\n        this.pos.add(this.vel.copy().mult(deltaTime));\r\n        this.acceleration.mult(0);\r\n\r\n        this.shots.forEach( (bullet: Bullet) => {\r\n            bullet.update(deltaTime);\r\n\r\n            if (bullet.pos.y < - 100) {\r\n                this.shots.splice( this.shots.indexOf(bullet), 1 );\r\n            }\r\n        });\r\n    }\r\n\r\n    display() {\r\n        this.p5Instance.noStroke();\r\n        if (this.redInvulnerable) {\r\n            this.p5Instance.stroke(255, 50, 50);\r\n            this.p5Instance.strokeWeight(this.diameter * 0.1);\r\n            this.p5Instance.fill(230, 155);\r\n        } else if (this.invulnerable)  {\r\n            this.p5Instance.stroke(255);\r\n            this.p5Instance.strokeWeight(this.diameter * 0.1);\r\n            this.p5Instance.fill(230, 50);\r\n        } else {\r\n            this.p5Instance.fill(230, 255);\r\n        }\r\n        this.p5Instance.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter);\r\n\r\n        this.shots.forEach( (bullet: Bullet) => {\r\n            bullet.display();\r\n        });\r\n    }\r\n\r\n    moveSpaceship() {\r\n\r\n        this.checkEdges();\r\n\r\n        let acceleration: number;\r\n\r\n        // Apply accelerometer x force\r\n        if (this.deviceAcceleration && this.deviceAcceleration.y && this.deviceAcceleration.x) {\r\n            if (this.isPortrait) {\r\n                acceleration = this.p5Instance.map(this.deviceAcceleration.x, -3, 3, 100, -100);\r\n            } else {\r\n                acceleration = this.p5Instance.map(this.deviceAcceleration.y, -3, 3, -100, 100);\r\n            }\r\n            if (acceleration > 0 && this.pos.x < this.sketchWidth * 0.9) {\r\n                this.applyForce(this.p5Instance.createVector(acceleration, 0, 0));\r\n            } else if (acceleration < 0 && this.pos.x > this.sketchWidth * 0.1) {\r\n                this.applyForce(this.p5Instance.createVector(acceleration, 0, 0));\r\n            }\r\n        }\r\n\r\n        if (this.leftKeyPressed && this.pos.x > this.sketchWidth * 0.1) {\r\n            acceleration = -100;\r\n            this.applyForce(this.p5Instance.createVector(acceleration, 0, 0));\r\n        }\r\n        if (this.rightKeyPressed && this.pos.x < this.sketchWidth * 0.9) {\r\n            acceleration = 100;\r\n            this.applyForce(this.p5Instance.createVector(acceleration, 0, 0));\r\n        }\r\n\r\n        this.vel.limit(330);\r\n    }\r\n    checkEdges() {\r\n        if (this.pos.x > this.sketchWidth * 0.9) {\r\n            if (this.vel.x > 15) {\r\n                this.friction = this.vel.mag() * 0.5;\r\n            } else {\r\n                this.friction = this.vel.mag() * 0.2;\r\n                this.applyForce(this.p5Instance.createVector(-200));\r\n            }\r\n        } else if (this.pos.x < this.sketchWidth * 0.1) {\r\n            if (this.vel.x < -15) {\r\n                this.friction = this.vel.mag() * 0.5;\r\n            } else {\r\n                this.friction = this.vel.mag() * 0.2;\r\n                this.applyForce(this.p5Instance.createVector(+200));\r\n            }\r\n        } else {\r\n            this.friction = this.vel.mag() * 0.2;\r\n        }\r\n    }\r\n\r\n    applyForce(force: Vector) {\r\n        const f: Vector = Vector.div(force , this.mass);\r\n        this.acceleration.add(f);\r\n    }\r\n\r\n    motionEventHandler = (event: DeviceMotionEvent) => {\r\n\r\n        const { accelerationIncludingGravity } = event;\r\n\r\n        if(accelerationIncludingGravity) {\r\n            this.deviceAcceleration = accelerationIncludingGravity;\r\n\r\n        }\r\n    };\r\n\r\n    shot() {\r\n        this.shots.push(new Bullet(this.pos.copy(), this.p5Instance))\r\n    }\r\n\r\n    damaged() {\r\n        this.live--;\r\n        this.invulnerable = true;\r\n        this.invulnerabilityDelay().then(() => {\r\n            this.invulnerable = false;\r\n        });\r\n    }\r\n\r\n    invulnerabilityDelay(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    unmount() {\r\n        window.removeEventListener('devicemotion', this.motionEventHandler, true);\r\n    }\r\n}\r\n\r\nclass Bullet {\r\n    readonly pos: Vector;\r\n    private readonly vel: Vector;\r\n    private readonly acceleration: Vector;\r\n    private readonly mass: number;\r\n    private readonly pInstance: p5;\r\n\r\n    constructor(_pos: Vector, _pInstance: p5) {\r\n        this.pInstance = _pInstance;\r\n        this.pos = _pos;\r\n        this.vel = this.pInstance.createVector(0, 0);\r\n        this.acceleration = this.pInstance.createVector(0 , 0);\r\n        this.mass = 1;\r\n\r\n        this.applyForce(this.pInstance.createVector(0, -500));\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.vel.add(this.acceleration);\r\n        this.pos.add(this.vel.copy().mult(deltaTime));\r\n        this.acceleration.mult(0);\r\n    }\r\n\r\n    display() {\r\n        this.pInstance.fill(200);\r\n        this.pInstance.noStroke();\r\n        this.pInstance.ellipse(this.pos.x, this.pos.y, 10, 10);\r\n    }\r\n\r\n\r\n    applyForce(force: Vector) {\r\n        const f: Vector = Vector.div(force , this.mass);\r\n        this.acceleration.add(f);\r\n    }\r\n}\r\n\r\nclass EnemyShip {\r\n    readonly pos: Vector;\r\n    private readonly vel: Vector;\r\n    private readonly acceleration: Vector;\r\n    private readonly p5Instance: p5;\r\n    private friction: number;\r\n    private readonly sketchWidth: number;\r\n    private readonly sketchHeight: number;\r\n    private fillOpacity: number;\r\n    mass: number;\r\n    diameter: number;\r\n    brake: boolean;\r\n\r\n    live: number;\r\n\r\n    explosionWaves: ExplosionWave[];\r\n    private alive: boolean;\r\n    private moving: boolean;\r\n    private resolveMovePromise: (() => void) | undefined;\r\n    private resolveDeath: (() => void) | undefined;\r\n    private readonly objective: Vector;\r\n\r\n    constructor(_p5Instance: p5, _sketchWidth: number, _sketchHeight: number, lastEnemyPosition?: Vector) {\r\n        this.p5Instance = _p5Instance;\r\n        this.sketchWidth = _sketchWidth;\r\n        this.sketchHeight = _sketchHeight;\r\n        this.vel = this.p5Instance.createVector(0, 0);\r\n        this.acceleration = this.p5Instance.createVector(0 , 0);\r\n        this.mass = 10;\r\n        this.friction = this.mass * 0.01;\r\n        lastEnemyPosition? this.pos = lastEnemyPosition : this.pos = this.p5Instance.createVector(0, 0);\r\n        this.diameter = this.mass * (this.sketchWidth * 0.01);\r\n        this.live = 50;\r\n        this.fillOpacity = 230;\r\n\r\n        this.explosionWaves = [];\r\n        this.alive = true;\r\n        this.moving = true;\r\n        this.brake = false;\r\n\r\n        this.objective = this.p5Instance.createVector(this.p5Instance.random(0, this.sketchWidth), this.p5Instance.random(0, this.sketchHeight));\r\n\r\n        this.shotWave();\r\n\r\n    }\r\n\r\n    async shotWave(): Promise<void> {\r\n        while (this.alive) {\r\n            if (this.alive) {\r\n                await this.move();\r\n            }\r\n            if (this.alive) {\r\n                await this.releaseExplosion();\r\n            }\r\n        }\r\n    }\r\n\r\n    move(): Promise<void> {\r\n        this.objective.set(this.p5Instance.random(this.sketchWidth * 0.15, this.sketchWidth * 0.75), this.p5Instance.random(this.sketchHeight * 0.15, this.sketchHeight * 0.55));\r\n        this.moving = true;\r\n        return new Promise<void>(resolve => {\r\n            this.resolveMovePromise = resolve;\r\n        });\r\n    }\r\n\r\n    applyForce(force: Vector) {\r\n        const f: Vector = Vector.div(force , this.mass);\r\n        this.acceleration.add(f);\r\n    }\r\n\r\n    update() {\r\n\r\n        if (this.moving) {\r\n            if (this.brake) {\r\n                if (this.vel.mag() < 0.2) {\r\n                    this.vel.mult(0);\r\n                    this.acceleration.mult(0);\r\n                    this.friction = this.mass * 0.01;\r\n                    this.moving = false;\r\n                    this.brake = false;\r\n                    if (this.resolveMovePromise) {\r\n                        this.resolveMovePromise();\r\n                    }\r\n                }\r\n            } else {\r\n                const dir = Vector.sub(this.objective, this.pos);\r\n                dir.normalize();\r\n                dir.mult(2);\r\n                this.applyForce(dir);\r\n\r\n                if (Vector.dist(this.objective, this.pos) < this.diameter * 0.2) {\r\n                    this.brake = true;\r\n                    this.friction = this.vel.mag() * 0.3;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!this.alive) {\r\n            this.fillOpacity--;\r\n            if (this.fillOpacity <= 0 && this.resolveDeath){\r\n                this.resolveDeath();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const frictionVector: Vector = this.vel.copy();\r\n        frictionVector.mult(-1);\r\n        frictionVector.normalize();\r\n        frictionVector.mult(this.friction);\r\n        this.applyForce(frictionVector);\r\n\r\n        this.vel.add(this.acceleration);\r\n        this.pos.add(this.vel);\r\n        this.acceleration.mult(0);\r\n\r\n\r\n        this.explosionWaves.forEach((explosion: ExplosionWave) => {\r\n            explosion.update();\r\n            if (explosion.diameter > 10000) {\r\n                this.explosionWaves.splice(this.explosionWaves.indexOf(explosion), 1);\r\n            }\r\n        });\r\n\r\n        this.vel.limit(20);\r\n    }\r\n\r\n    display() {\r\n        this.p5Instance.stroke(244,67,54, this.fillOpacity);\r\n        this.p5Instance.strokeWeight(this.p5Instance.map(this.p5Instance.cos(this.p5Instance.radians(this.p5Instance.frameCount * 3)), -1, 1, this.diameter * 0.03,  this.diameter * 0.09));\r\n        this.p5Instance.fill(230, 100, 100,this.fillOpacity * 0.7);\r\n        this.p5Instance.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter);\r\n\r\n        this.explosionWaves.forEach((explosion: ExplosionWave) => {\r\n            explosion.display();\r\n        });\r\n    }\r\n\r\n    async releaseExplosion(): Promise<void> {\r\n            for (let i = 0; i < this.p5Instance.random(2, 6); i++) {\r\n                if (this.alive) {\r\n                    this.explosionWaves.push(new ExplosionWave(this.pos.copy(), this.diameter, this.p5Instance.random(1, 4), this.p5Instance));\r\n                    await this.delayBetweenExplosions(this.p5Instance.random(500, 2000));\r\n                }\r\n            }\r\n    }\r\n\r\n    delayBetweenExplosions(milliseconds: number): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, milliseconds);\r\n        });\r\n    }\r\n\r\n    destroyEnemy(): Promise<void> {\r\n        this.alive = false;\r\n        return new Promise<void>(resolve => {\r\n            this.resolveDeath = resolve;\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nclass ExplosionWave {\r\n    pInstance: p5;\r\n    pos: Vector;\r\n    diameter: number;\r\n    strokeMultiplier: number;\r\n    strokeSize: number;\r\n\r\n    constructor(_pos: Vector, _initialDiameter: number, _strokeMultiplier: number, _pInstance: p5) {\r\n        this.pInstance = _pInstance;\r\n        this.pos = _pos;\r\n        this.diameter = _initialDiameter;\r\n        this.strokeMultiplier = _strokeMultiplier;\r\n        this.strokeSize = (this.diameter * 0.05) * this.strokeMultiplier;\r\n    }\r\n\r\n    display() {\r\n        this.pInstance.stroke(244,67,54, 100);\r\n        this.pInstance.strokeWeight(this.strokeSize);\r\n        this.pInstance.noFill();\r\n        this.pInstance.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter);\r\n    }\r\n\r\n    update() {\r\n        this.diameter += (this.diameter * 0.1) / this.strokeMultiplier;\r\n        this.strokeSize = (this.diameter * 0.05) * this.strokeMultiplier;\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './SketchGame.css';\r\nimport { Sketch } from './P5Wrapper/sketch';\r\nimport {sketch} from \"./sketch.p5\";\r\nimport {observer} from \"mobx-react\";\r\nimport {store} from \"../../store/P5Store\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\n@observer class SketchGame extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'CanvasContainer'}>\r\n                <Sketch sketch={sketch}\r\n                        width={'99%'}\r\n                        height={'99%'}\r\n                        sketchProps={{fire: store.fire, redInvulnerability: store.redInvulnerability}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SketchGame;","import React, {PureComponent} from 'react';\r\nimport './GameP5.css'\r\nimport SketchGame from \"../../Components/SketchP5/SketchGame\";\r\nimport {store} from \"../../store/P5Store\";\r\n\r\nclass GameP5 extends PureComponent {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.onShot = this.onShot.bind(this);\r\n        this.onInvulnerabilityActive =  this.onInvulnerabilityActive.bind(this);\r\n        this.onInvulnerabilityOff =  this.onInvulnerabilityOff.bind(this);\r\n    }\r\n\r\n\r\n    onShot() {\r\n        store.BulletFired(true);\r\n    };\r\n\r\n    onInvulnerabilityActive() {\r\n        store.InvulnerabilityRed(true);\r\n    }\r\n\r\n    onInvulnerabilityOff() {\r\n        store.InvulnerabilityRed(false);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'gameContainer'}>\r\n                <div className={'invulnerabilityButtonContainer noResponsiveButton'}>\r\n                    <button className={'invulnerabilityButton'} onTouchStart={this.onInvulnerabilityActive}  onTouchEnd={this.onInvulnerabilityOff}/>\r\n                </div>\r\n                <SketchGame/>\r\n                <div className={'buttonsGeneralContainer responsiveButton'}>\r\n                    <div className={'invulnerabilityButtonContainer'}>\r\n                        <button className={'invulnerabilityButton'} onTouchStart={this.onInvulnerabilityActive}  onTouchEnd={this.onInvulnerabilityOff}/>\r\n                    </div>\r\n                    <div className={'fireButtonContainer'}>\r\n                        <button className={'fireButton'} onTouchStart={this.onShot}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={'fireButtonContainer noResponsiveButton'}>\r\n                    <button className={'fireButton'} onTouchStart={this.onShot}/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameP5;","import React, {Component} from 'react';\r\nimport GameP5 from \"./GameP5/GameP5\";\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        return (\r\n            <GameP5/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;","import React, { PureComponent } from 'react';\r\nimport './App.css';\r\nimport Root from \"./Containers/Root\";\r\n\r\nclass App extends PureComponent {\r\n    render() {\r\n        return (\r\n            <Root/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}